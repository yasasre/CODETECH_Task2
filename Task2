from sklearn import datasets
from sklearn.model_selection import train_test_split
from sklearn import linear_model
from sklearn.metrics import mean_squared_error, r2_score
import seaborn as sns
import matplotlib.pyplot as plt
diabetics = datasets.load_diabetes()
print(diabetics.DESCR)
print(diabetics.feature_names)
a = diabetics.data
b = diabetics.target
print(a.shape,b.shape)
#data split
a_train,a_test,b_train,b_test =train_test_split(a,b,test_size=0.2)
print(a_train.shape,b_train.shape)
print(a_test.shape,b_test.shape)
model = linear_model.LinearRegression()
model.fit(a_train,b_train)
b_pred = model.predict(a_test)
print('coefficients:',model.coef_)
print('Intercept:',model.intercept_)
print('Mean squared error(MSE):%.2f'% mean_squared_error(b_test,b_pred))
print('coefficient of determination (R^2):%.2f'% r2_score(b_test,b_pred))
#string formatting
#this r2_score below keeps on updating
print(r2_score(b_test,b_pred))
print(r2_score(b_test,b_pred).dtype)
print('%f' % 0.523810833536016)
print('%.3f' % 0.523810833536016)
print('%.2f' % 0.523810833536016)
#plotting
print(b_test)
print(b_pred)
sns.scatterplot(x=b_test,y=b_pred)
plt.show()
sns.scatterplot(x=b_test,y=b_pred,marker='+')
plt.show()
sns.scatterplot(x=b_test,y=b_pred,alpha=0.5)
plt.show()















